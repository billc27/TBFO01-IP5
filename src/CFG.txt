S -> ENTER S
S -> S ENTER
S -> ENTER
S -> SS
## EOF : end of file
S -> EOF
SS -> SS SS
SS -> FUNC_STMT
SS -> FOR_STMT
SS -> IF_STMT
SS -> WHILE_STMT
SS -> DO_WHILE
SS -> SENTENCE
SS -> SWITCH_STMT
SS -> TRY_STMT
SS -> DELETE_STMT
## EOF : end of file
SS -> EOF
SENTENCE -> ENTER
SENTENCE -> ENTER SENTENCE
SENTENCE -> SENTENCE ENTER SENTENCE
SENTENCE -> SENTENCE ENTER
SENTENCE -> SENTENCE SEMICOLON
SENTENCE -> SENTENCE SEMICOLON SENTENCE
SENTENCE -> SEMICOLON SENTENCE
SENTENCE -> SENTENCE SENTENCE
## SENTENCE -> SENTENCE_UNIT
## SENTENCE -> IF_BLOCK
## SENTENCE -> WHILE_STMT
## SENTENCE -> DO_WHILE
## SENTENCE -> FOR_STMT
## SENTENCE -> SWITCH_STMT
## SENTENCE -> TRY_STMT
## SENTENCE -> FUNCTION_STMT
## SENTENCE -> METHOD_STMT
## SENTENCE -> THROW ALL
## SENTENCE -> DELETE_STMT
## SENTENCE -> ASSIGN
## SENTENCE -> MODIFY
## SENTENCE -> CONTINUE
## SENTENCE -> BREAK
###SENTENCE -> SENTENCE_UNIT
SENTENCE -> INLINE_SENTENCE
SENTENCE_UNIT -> IF_BLOCK
SENTENCE_UNIT -> FUNC_SENTENCE
SENTENCE_UNIT -> FUNCTION
SENTENCE_UNIT -> METHOD_STMT
SENTENCE_UNIT -> WITH_STATE
SENTENCE_UNIT -> WHILE_STMT
SENTENCE_UNIT -> DO_WHILE
SENTENCE_UNIT -> FOR_STMT
SENTENCE_UNIT -> SWITCH_STMT
SENTENCE_UNIT -> TRY_STMT
SENTENCE_UNIT -> ASSIGN
SENTENCE_UNIT -> MODIFY
SENTENCE_UNIT -> CONTINUE
SENTENCE_UNIT -> BREAK
SENTENCE_UNIT -> THROW ALL
SENTENCE_UNIT -> DELETE_STMT
SINGLE_SENTENCE -> SENTENCE_UNIT SEMICOLON
SINGLE_SENTENCE -> SENTENCE_UNIT ENTER
SINGLE_SENTENCE -> SENTENCE_UNIT EOF
INLINE_SENTENCE -> SINGLE_SENTENCE
INLINE_SENTENCE -> INLINE_SENTENCE INLINE_SENTENCE
ENCLOSED_INLINE -> SENTENCE_UNIT
ENCLOSED_INLINE -> ENCLOSED_INLINE SEMICOLON ENCLOSED_INLINE
ENCLOSED_INLINE -> ENCLOSED_INLINE ENTER ENCLOSED_INLINE
###
### INLINE_SENTENCE -> SENTENCE_UNIT
### INLINE_SENTENCE -> SEMICOLON SENTENCE_UNIT
### INLINE_SENTENCE -> INLINE_SENTENCE SEMICOLON SENTENCE_UNIT
### INLINE_SENTENCE -> ENTER SENTENCE_UNIT
### INLINE_SENTENCE -> INLINE_SENTENCE ENTER SENTENCE_UNIT
###
ARIT_OP -> ID ARIT_OPERATOR ARIT_OP
ARIT_OP -> STATIC ARIT_OPERATOR ARIT_OP
ARIT_OP -> ID ARIT_OPERATOR ID
ARIT_OP -> STATIC ARIT_OPERATOR ID
ARIT_OP -> ID ARIT_OPERATOR STATIC
ARIT_OP -> STATIC ARIT_OPERATOR STATIC
ARIT_OP -> LRB ARIT_OP RRB
ARIT_OP -> TYPE LRB ARIT_OP RRB
ARIT_OPERATOR -> ADD
ARIT_OPERATOR -> SUB
ARIT_OPERATOR -> MUL
ARIT_OPERATOR -> DIV
ARIT_OPERATOR -> MOD
ARIT_OPERATOR -> POW
ARIT_OPERATOR -> ANDBIT
ARIT_OPERATOR -> ORBIT
ARIT_OPERATOR -> XORBIT
LOGI_ID -> FUNCTION
LOGI_ID -> METHOD_STMT
LOGI_ID -> IDINT
LOGI_ID -> NOT IDINT
LOGI_ID -> NOTBIT IDINT
LOGI_ID -> BOOL
LOGI_ID -> NUM
LOGI_ID -> NOT LOGI_ID
LOGI_ID -> NOTBIT LOGI_ID
LOGI_ID -> LRB LOGI_ID RRB
BOOL -> NOT BOOL
BOOL -> NOTBIT BOOL
LOGI_OP -> ID
LOGI_OP -> NOT LOGI_OP
LOGI_OP -> NOTBIT LOGI_OP
LOGI_OP -> LOGI_ID LOGI_OPERATOR LOGI_OP
LOGI_OP -> LOGI_ID LOGI_OPERATOR LOGI_ID
LOGI_OP -> LRB LOGI_OP RRB
## ==
LOGI_OPERATOR -> ISEQ
LOGI_OPERATOR -> LEQ
LOGI_OPERATOR -> L
LOGI_OPERATOR -> GEQ
LOGI_OPERATOR -> G
## !=
LOGI_OPERATOR -> NEQ
## !==
LOGI_OPERATOR -> NEQEQ
## ===
LOGI_OPERATOR -> ISEQEQ
LOGI_OPERATOR -> AND
LOGI_OPERATOR -> OR
EXP -> ID LRB RRB
EXP -> ID LRB PARAM RRB
EXP -> BOOL 
EXP -> IDINT
EXP -> NUM
EXP -> MODIFY
EXP -> ASSIGN
EXP -> LOGI_OP
EXP -> EXP ARIT_OPERATOR EXP
EXP -> TYPE LRB EXP RRB
EXP -> EXP SEMICOLON
STMT -> EXP LOGI_OPERATOR EXP
CONDITION -> EXP
CONDITION -> STMT
CONDITION -> ID
CONDITION -> FUNCTION
CONDITION -> METHOD_STMT
CONDITION -> LOGI_OP
IF_CONDITION -> LRB CONDITION RRB
IF_CONDITION -> LRB ENTER CONDITION RRB
IF_CONDITION -> LRB ENTER CONDITION ENTER RRB
IF_CONDITION -> LRB CONDITION ENTER RRB
IF_CONDITION -> ENTER IF_CONDITION
###
###
THEN_BLOCK -> SINGLE_SENTENCE
THEN_BLOCK -> LCB SENTENCE RCB
THEN_BLOCK -> LCB ENCLOSED_INLINE RCB
THEN_BLOCK -> ENTER THEN_BLOCK
IF_STMT -> IF IF_CONDITION THEN_BLOCK
IF_STMT -> ENTER IF_STMT
ELIF_STMT -> ELSE IF_STMT
ELIF_STMT -> ELIF_STMT ELIF_STMT
ELIF_STMT -> ENTER ELIF_STMT
ELSE_STMT -> ELSE THEN_BLOCK
ELSE_STMT -> ENTER ELSE_STMT
IF_BLOCK -> IF_STMT
IF_BLOCK -> IF_STMT ELIF_STMT
IF_BLOCK -> IF_STMT ELIF_STMT ELSE_STMT
IF_BLOCK -> IF_STMT ELSE_STMT
ASSIGN -> TYPE ID ASSIGN_OP ASSIGNMENT
ASSIGN -> TYPE KARTITIK ASSIGN_OP ASSIGNMENT
ASSIGN -> TYPE ARRAY ASSIGN_OP ASSIGNMENT
ASSIGN -> TYPE ARRAY LIST ASSIGN_OP ASSIGNMENT
MODIFY -> ID MODIFY_OP ASSIGNMENT
ASSIGN_OP -> EQ
MODIFY_OP -> EQ
MODIFY_OP -> SUBEQ
MODIFY_OP -> MULEQ
MODIFY_OP -> SUMEQ
MODIFY_OP -> DIVEQ
MODIFY_OP -> MODEQ
MODIFY_OP -> POWEQ
OPERATION -> ARIT_OP
OPERATION -> LOGI_OP
ASSIGNMENT -> KARTITIK
ASSIGNMENT -> OPERATION
ASSIGNMENT -> ID
ASSIGNMENT -> NUM
ASSIGNMENT -> STRING
ASSIGNMENT -> FUNCTION
FUNC_STMT -> ENTER FUNC_STMT
FUNC_STMT -> FUNCTION ID LRB RRB FUNC_BLOCK
FUNC_STMT -> FUNCTION ID LRB PARAM RRB FUNC_BLOCK
FUNC_STMT -> FUNCTION ID LRB RRB FUNC_BLOCK
FUNC_STMT -> FUNCTION ID LRB PARAM RRB FUNC_BLOCK
PARAM -> ID
PARAM -> PARAM COMMA PARAM
FUNC_BLOCK -> LCB RETURN ID SEMICOLON RCB
FUNC_BLOCK -> LCB SENTENCE RCB
FUNC_BLOCK -> LCB LOOP_SENTENCE RCB
FUNC_BLOCK -> LCB SENTENCE RETURN ID ENTER RCB
FUNC_BLOCK -> LCB SENTENCE RETURN ID SEMICOLON RCB
FUNC_BLOCK -> LCB SENTENCE RETURN ID ENTER SEMICOLON ENTER RCB
FUNC_BLOCK -> LCB LOOP_SENTENCE RETURN ID ENTER RCB
FUNC_BLOCK -> LCB LOOP_SENTENCE RETURN ID SEMICOLON ENTER RCB
FUNC_BLOCK -> LCB LOOP_SENTENCE RETURN ID ENTER SEMICOLON ENTER RCB
DO_BLOCK -> SINGLE_SENTENCE
DO_BLOCK -> LCB SENTENCE RCB
DO_BLOCK -> LCB ENCLOSED_INLINE RCB
DO_BLOCK -> LCB LOOP_SENTENCE RCB
DO_BLOCK -> ENTER DO_BLOCK
WHILE_STMT -> WHILE IF_CONDITION DO_BLOCK
DO_WHILE -> DO DO_BLOCK WHILE IF_CONDITION
DO_WHILE -> DO DO_BLOCK WHILE IF_CONDITION SEMICOLON
FOR_CONDITION -> LRB SEMICOLON SEMICOLON RRB
FOR_CONDITION -> LRB EXP SEMICOLON SEMICOLON RRB
FOR_CONDITION -> LRB SEMICOLON EXP SEMICOLON RRB
FOR_CONDITION -> LRB SEMICOLON SEMICOLON EXP RRB
FOR_CONDITION -> LRB EXP SEMICOLON EXP SEMICOLON RRB
FOR_CONDITION -> LRB EXP SEMICOLON SEMICOLON EXP RRB
FOR_CONDITION -> LRB SEMICOLON EXP SEMICOLON EXP RRB
FOR_CONDITION -> LRB EXP SEMICOLON EXP SEMICOLON EXP RRB
FOR_STMT -> FOR FOR_CONDITION DO_BLOCK
DELETE_STMT -> DELETE DELETE_BLOCK SEMICOLON
DELETE_STMT -> DELETE LRB DELETE_BLOCK RRB SEMICOLON
DELETE_BLOCK -> ENTER DELETE_BLOCK
DELETE_BLOCK -> DELETE_BLOCK ENTER
DELETE_BLOCK -> ID
DELETE_BLOCK -> ID TITIK ID
LOOP_SENTENCE -> SENTENCE
LOOP_SENTENCE -> BREAK
LOOP_SENTENCE -> CONTINUE
LOOP_SENTENCE -> LOOP_SENTENCE ENTER
LOOP_SENTENCE -> LOOP_SENTENCE ENTER LOOP_SENTENCE
LOOP_SENTENCE -> ENTER LOOP_SENTENCE
LOOP_SENTENCE -> IF_BLOCK LOOP_SENTENCE
LOOP_SENTENCE -> ASSIGN NEWLINE
###
CASE_BLOCK -> CASE ALL COLON SENTENCE
CASE_BLOCK -> CASE ALL COLON LCB SENTENCE RCB
CASE_BLOCK -> CASE ALL COLON ENTER LCB SENTENCE RCB
CASE_BLOCK -> DEFAULT COLON SENTENCE
CASE_BLOCK -> DEFAULT COLON LCB SENTENCE RCB
CASE_BLOCK -> DEFAULT COLON ENTER LCB SENTENCE RCB
CASE_BLOCK -> CASE_BLOCK CASE_BLOCK
CASE_BLOCK -> ENTER CASE_BLOCK
CASE_BLOCK -> CASE_BLOCK ENTER CASE_BLOCK
CASE_BLOCK -> CASE_BLOCK ENTER
SWITCH_STMT -> SWITCH LRB ID RRB LCB CASE_BLOCK RCB
SWITCH_STMT -> SWITCH LRB ID RRB ENTER LCB CASE_BLOCK RCB
TRY_STMT -> ENTER TRY_STMT
TRY_STMT -> TRY DO_BLOCK CATCH LRB ERR RRB DO_BLOCK
TRY_STMT -> TRY DO_BLOCK CATCH LRB ERR RRB DO_BLOCK FINALLY DO_BLOCK
TRY_STMT -> TRY DO_BLOCK CATCH LRB ERR RRB DO_BLOCK TRY_STMT
TRY_STMT -> TRY DO_BLOCK CATCH LRB ERR RRB DO_BLOCK FINALLY DO_BLOCK TRY_STMT
ENTER -> NEWLINE ENTER
ENTER -> NEWLINE
ID -> LRB IDINT RRB
IDINT -> ID
IDINT -> INT
IDINT -> BOOL
IDINT -> NONE
ALL -> IDINT
ALL -> STRING
ALL -> NUM
ALL -> BOOL
BOOL -> NONE
BOOL -> TRUE
BOOL -> FALSE